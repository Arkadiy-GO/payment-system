package models

import (
	"fmt"
	"time"
)

// Transaction представляет собой модель транзакции между двумя кошельками.
// Транзакция включает информацию об отправителе, получателе, сумме перевода и времени создания.
type Transaction struct {
	// ID - уникальный идентификатор транзакции.
	// Это поле автоматически генерируется базой данных при создании записи.
	ID int `json:"id" db:"id"`

	// From - адрес кошелька отправителя.
	// Это поле обязательно для заполнения и должно содержать валидный адрес кошелька.
	From string `json:"from" db:"from_address"`

	// To - адрес кошелька получателя.
	// Это поле обязательно для заполнения и должно содержать валидный адрес кошелька.
	To string `json:"to" db:"to_address"`

	// Amount - сумма перевода.
	// Это поле обязательно для заполнения и должно быть положительным числом.
	Amount float64 `json:"amount" db:"amount"`

	// CreatedAt - время создания транзакции.
	// Это поле автоматически устанавливается в текущее время при создании записи в базе данных.
	CreatedAt time.Time `json:"created_at" db:"created_at"`
}

// Validate проверяет, что транзакция содержит корректные данные.
// Возвращает ошибку, если какое-либо из полей не соответствует требованиям.
func (t *Transaction) Validate() error {
	if t.From == "" {
		return fmt.Errorf("поле 'From' обязательно для заполнения")
	}
	if t.To == "" {
		return fmt.Errorf("поле 'To' обязательно для заполнения")
	}
	if t.Amount <= 0 {
		return fmt.Errorf("поле 'Amount' должно быть положительным числом")
	}
	return nil
}
